// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0 <0.9.0;

contract chaalu {
    uint public number = 10000000;

    struct person {
        uint favouritenumber;
        string name;
    }

    person[] public start; 
       // here person is an array of struct and start is the name of the array

   mapping ( string => uint) public pointer;

function dollar(uint _paisa) public {
    number= _paisa;
}    

function repeat() public view returns(uint) {
    return number;
}

function apple(string memory _name, uint _favouritenumber) public {
    start.push(person (_favouritenumber, _name) );
    pointer[_name] = _favouritenumber;

}

}

contract chaalu2 {}
contract chaalu3 {}
contract chaalu4 {}# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
